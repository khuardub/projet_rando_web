@page "/authentification"
@using projet_rando_web.Classes
@using projet_rando_web.Enums

<div class="container">
    <div class="row justify-content-center mt-5">
        <div class="col-md-7">
            <div class="card">
                <div class="card-body">
                    <h2 class="card-title text-center mb-4">Authentification</h2>
                    <EditForm Model="@utilisateur" OnValidSubmit="Authentifier">
                        <DataAnnotationsValidator />
                        <div class="mb-3">
                            <label for="prenom" class="form-label">Prénom</label>
                            <InputText id="prenom" placeholder="Votre Prénom" class="form-control" @bind-Value="utilisateur.Prenom" />
                            <ValidationMessage For="@(() => utilisateur.Prenom)" />
                        </div>
                        <div class="mb-3">
                            <label for="nom" class="form-label">Nom</label>
                            <InputText id="nom" placeholder="Votre Nom" class="form-control" @bind-Value="utilisateur.Nom" />
                            <ValidationMessage For="@(() => utilisateur.Nom)" />
                        </div>
                        <div class="mb-3">
                            <label for="courriel" class="form-label">Courriel</label>
                            <InputText id="courriel" placeholder="Votre Courriel" class="form-control" @bind-Value="utilisateur.Courriel" />
                            <ValidationMessage For="@(() => utilisateur.Courriel)" />
                        </div>
                        <div class="mb-3">
                            <label for="mdp" class="form-label">Mot de Passe</label>
                            <InputText id="mdp" placeholder="Créer votre mot de passe" class="form-control" @bind-Value="utilisateur.MotDePasse" />
                            <ValidationMessage For="@(() => utilisateur.MotDePasse)" />
                        </div>
                        <div class="mb-3">
                            <label for="pseudo" class="form-label">Pseudo</label>
                            <InputText id="pseudo" placeholder="Votre Pseudo" class="form-control" @bind-Value="utilisateur.Pseudo" />
                            <ValidationMessage For="@(() => utilisateur.Pseudo)" />
                        </div>
                        <div class="mb-3">
                            <label for="langue" class="form-label">Langue</label>
                            <InputSelect id="langue" class="form-select" @bind-Value="utilisateur.Langue">
                                <option disabled value="" selected>-- Choisissez votre Langue --</option>
                                @foreach (Langue langue in langues)
                                {
                                    <option value="@langue.Id">@langue.Nom</option>
                                }
                            </InputSelect>
                            <ValidationMessage For="@(() => utilisateur.Langue)" />
                        </div>
                        <div class="mb-3">
                            <label for="niveau" class="form-label">Niveau</label>
                            <InputSelect id="niveau" class="form-select" @bind-Value="utilisateur.Niveau">
                                @foreach (Niveau nomNiveau in Enum.GetValues(typeof(Niveau)))
                                {
                                    <option value="@nomNiveau">@nomNiveau</option>
                                }
                            </InputSelect>
                            <ValidationMessage For="@(() => utilisateur.Niveau)" />
                        </div>
                        <div class="text-center">
                            <button type="submit" class="btn btn-primary">Créer le Compte</button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>


@code {
    private Utilisateur utilisateur;

    protected override void OnInitialized()
    {
        utilisateur = new Utilisateur();

        langues = new List<Langue>()
        {
            new Langue("0","Français"),
            new Langue("1","Engalais"),
            new Langue("2","Arabe"),

        };
    }

    private List<Langue> langues;

    private void Authentifier()
    {

    }
}
