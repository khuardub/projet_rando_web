@page "/creation_randonnee"
@layout MainLayout
@using projet_rando_web.Classes
@using projet_rando_web.Enums
@inject projet_rando_web.Interfaces.IVille villeService
@inject projet_rando_web.Interfaces.IRandonnee randonneService
@inject AuthenticationStateProvider authStateProvider

<PageTitle>Création d'une Randonnée</PageTitle>
<main>
    <AuthorizeView>
        <Authorized Context="authContext">
            <div class="container pt-3">
                <div class="div-rend bg-dark container-fluid p-5 mb-5 mt-2">
                <h2 class="text-light text-center border-top border-bottom border-2">Création d'une randonnée</h2>
                    <div class="container mt-5">
                         <div class="row justify-content-center">
                            <div class="col-md-9">


                                @if (randonneExiste)
                                {
                                    <div class="alert alert-danger" role="alert">
                                        Cette Randonnée qui le nom "@randonnee.Nom" existe déjà.<br>
                                        Veuillez modifier le nom.
                                    </div>
                                }
                                <EditForm Model="@randonnee" OnValidSubmit="AjoutRandonnee" Context="editContext">
                                    <DataAnnotationsValidator />
                                    <div class="mb-3">
                                        <label for="nom" class="text-light">Nom de la Randonnée</label>
                                        <InputText id="nom" placeholder="Le Nom de votre Randonnée" class="form-control" @bind-Value="randonnee.Nom" />
                                        <ValidationMessage class="text-danger" For="@(() => randonnee.Nom)" />
                                    </div>
                                    <div class="mb-3">
                                        <label for="description" class="text-light">Description de la Randonnée</label>
                                        <InputText id="description" placeholder="La Description de votre Randonnée" class="form-control" @bind-Value="randonnee.Description" />
                                        <ValidationMessage class="text-danger" For="@(() => randonnee.Description)" />
                                    </div>
                                    <div class="mb-3">
                                        <label for="date_depart" class="text-light">Date de départ de la Randonnée</label>
                                        <InputDate id="date_depart" placeholder="La Date de départ de votre Randonnée" class="form-control" @bind-Value="randonnee.DateDepart"/>
                                        <ValidationMessage class="text-danger" For="@(() => randonnee.DateDepart)"/>
                                    </div>
                                    <div class="mb-3">
                                        <label for="endroit_depart" class="text-light">Ville de départ de la Randonnée</label>
                                        <InputSelect id="endroit_depart" placeholder="La ville de départ de votre Randonnée" class="form-select" @bind-Value="SelectedVilleDepartId">
                                            <option selected disabled>La ville de départ</option>
                                            @foreach (var ville in lstVille)
                                            {
                                                <option value="@ville.Id">@ville.Nom</option>
                                            }
                                        </InputSelect>
                                        <ValidationMessage class="text-danger" For="@(() => randonnee.EndroitDepart)" />
                                    </div>
                                    <div class="mb-3">
                                        <label for="endroit_retour" class="text-light">Ville de retour de la Randonnée</label>
                                        <InputSelect id="endroit_retour" placeholder="L'Endroit de retour de votre Randonnée" class="form-select" @bind-Value="SelectedVilleRetourId">
                                            <option selected disabled>La ville de retour</option>
                                            @foreach (var ville in lstVille)
                                            {
                                                <option value="@ville.Id">@ville.Nom</option>
                                            }
                                        </InputSelect>
                                        <ValidationMessage class="text-danger" For="@(() => randonnee.EndroitRetour)" />
                                    </div>
                                    <div class="mb-3">
                                        <label for="meteo" class="text-light">Météo de la Randonnée</label>
                                        <InputSelect id="meteo" placeholder="Le météo de votre Randonnée" class="form-select" @bind-Value="randonnee.Meteo">
                                            @foreach (Meteo meteo in Enum.GetValues(typeof(Meteo)))
                                            {
                                                <option value="@meteo">@UtilEnum.GetDescription(meteo)</option>
                                            }
                                        </InputSelect>
                                        <ValidationMessage class="text-danger" For="@(() => randonnee.Meteo)" />
                                    </div>
                                    <div class="mb-3">
                                        <label for="type" class="text-light">Type de la Randonnée</label>
                                        <InputSelect id="type" placeholder="Le type de votre Randonnée" class="form-select" @bind-Value="randonnee.TypeRando">
                                            @foreach (Sorte type in Enum.GetValues(typeof(Sorte)))
                                            {
                                                <option value="@type">@UtilEnum.GetDescription(type)</option>
                                            }
                                        </InputSelect>
                                        <ValidationMessage For="@(() => randonnee.TypeRando)" />
                                    </div>
                                    <div class="mb-3">
                                        <label for="niveau" class="text-light">Niveau de la Randonnée</label>
                                        <InputSelect id="niveau" placeholder="Le niveau de votre Randonnée" class="form-select" @bind-Value="randonnee.Niveau">
                                            @foreach (Niveau niveau in Enum.GetValues(typeof(Niveau)))
                                            {
                                                <option value="@niveau">@UtilEnum.GetDescription(niveau)</option>
                                            }
                                        </InputSelect>
                                        <ValidationMessage class="text-danger" For="@(() => randonnee.Niveau)" />
                                    </div>
                                    <div class="mb-3">
                                        <label for="denivele" class="text-light">Denivelé de la Randonnée (m)</label>
                                        <InputNumber id="denivele" class="form-control" @bind-Value="randonnee.Denivele" />
                                        <ValidationMessage class="text-danger" For="@(() => randonnee.Denivele)" />
                                    </div>
                                    <div class="mt-3 text-center">
                                            <button type="reset" class="btn btn-danger me-3">Réinitialiser</button>
                                            <button type="submit" class="btn btn-light">Ajouter la randonnée</button>
                                    </div>
                                </EditForm>
                            </div>
                        </div>
                     </div>
                </div>
            </div>
        </Authorized>
        <NotAuthorized Context="noAuthContext">
            <h3 class="text-center mt-4 text-light">Veuillez-vous connecter pour créer une randonnée.</h3>
        </NotAuthorized>
    </AuthorizeView>
    
</main>
<style>
    body {
        background-image: url('creation.jpg');
        background-size: cover;
        background-repeat: no-repeat;
        background-attachment: fixed;
        background-position: center center;
        height: 100%;
        margin: 0;
    }

    .main-title {
        color: white;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.7);
    }

    .main-card {
        background-color: rgba(255, 255, 255, 0.9);
        border-radius: 8px;
        box-shadow: 0 0 15px rgba(0,0,0,0.2);
    }
</style>

